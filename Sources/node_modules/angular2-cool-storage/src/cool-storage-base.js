"use strict";
var CoolStorageBase = (function () {
    function CoolStorageBase(storageObject, storageObjectName) {
        if (!storageObject) {
            throw new Error("Current browser does not support " + storageObjectName);
        }
        this.storageObject = storageObject;
    }
    CoolStorageBase.prototype.getItem = function (key) {
        return this.storageObject.getItem(key) || null;
    };
    CoolStorageBase.prototype.setItem = function (key, value) {
        this.storageObject.setItem(key, value);
    };
    CoolStorageBase.prototype.removeItem = function (key) {
        this.storageObject.removeItem(key);
    };
    CoolStorageBase.prototype.key = function (index) {
        return this.storageObject.key(index);
    };
    CoolStorageBase.prototype.clear = function () {
        this.storageObject.clear();
    };
    Object.defineProperty(CoolStorageBase.prototype, "length", {
        get: function () {
            return this.storageObject.length;
        },
        enumerable: true,
        configurable: true
    });
    CoolStorageBase.prototype.getObject = function (key) {
        var jsonInStorage = this.getItem(key);
        if (jsonInStorage === null) {
            return null;
        }
        return JSON.parse(jsonInStorage);
    };
    CoolStorageBase.prototype.setObject = function (key, value) {
        this.setItem(key, JSON.stringify(value));
    };
    return CoolStorageBase;
}());
exports.CoolStorageBase = CoolStorageBase;
//# sourceMappingURL=/Users/Hacklone/Projects/Public/angular2-cool-storage/src/cool-storage-base.js.map